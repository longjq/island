syntax = "proto2";
package island;
import "struct.proto";
import "constant.proto";

option java_package = "com.box.island.proto";  
option java_outer_classname = "Island";

option optimize_for = LITE_RUNTIME;


message EnterGameServerReq {
	enum DEF {
		ID = 100;
	}
	required int32 server_id = 1;
}

message EnterGameServerResp {
	enum DEF {
		ID = 101;
	}
	optional bool is_new = 2;	
}


message JoinGameReq { 	
	enum DEF {
		ID = 1000;
	}
	required GameType game_type = 1;
	required string code = 2;
	required int32 map_id = 3;
	required int32 team = 4;
}

message JoinGameResp {
    enum DEF {
		ID = 1001;
	}
	optional int32 game_id = 1;
	optional bool ready = 2;
}

message QueryGameWorldReq {
    enum DEF{
        ID = 1002;
    }
    required int32 game_id = 1;
}

message QueryGameWorldResp {
    enum DEF{
        ID = 1003;
    }
    optional GameWorld world = 1;
    repeated Player players = 2;
    optional int64 server_time = 3;
}

message QueryGameStateReq {
    enum DEF{
        ID = 1004;
    }
    required int32 game_id = 1;
}

message QueryGameStateResp {
    enum DEF{
        ID = 1005;
    }
    optional GameState state = 1;
}

message CreateForceReq {
    enum DEF {
        ID = 1020;
    }
    required int32 game_id = 1;
    required int32 src_island = 2;
    required int32 dst_island = 3;
    required int32 troops = 4;
    required ForceMoveType move_type = 5;
}

message CreateForceResp {
    enum DEF {
        ID = 1021;
    }
}

message GameStateEvent {
    enum DEF {
        ID = 10000;
    }
    required GameState game = 1;
    required bool ready = 2;
    repeated PlayerPower player_powers = 3;
}

message NewForceEvent {
    enum DEF {
        ID = 10002;
    }
    required int32 game_id = 1;
    required Force new_force = 2; 
    required Force island_force = 3;
    optional int64 server_time = 4;
    repeated PlayerPower player_powers = 5;
}

message UpdateForceEvent {
    enum DEF {
        ID = 10003;
    }
    required int32 game_id = 1;
    required Force force = 2; 
    optional int64 server_time = 3;
    repeated PlayerPower player_powers = 4;
}

message MergeForceEvent {
    enum DEF {
        ID = 10004;
    }
    required int32 game_id = 1;
    required Force force = 2; 
    required Force target_force = 3;
    optional int64 server_time = 4;
    repeated PlayerPower player_powers = 6;
}

message MissileAttackEvent {
    enum DEF {
        ID = 10005;
    }
    required int32 game_id = 1;
    required Force missile_force = 2;
    required Force island_force = 3;
    repeated Force forces = 4;
    optional int64 server_time = 5;
    repeated PlayerPower player_powers = 6;
}

message AttackMissileBaseEvent {
    enum DEF {
        ID = 10006;
    }
    required int32 game_id = 1;
    required Force force = 2;
    required Force island_force = 3;
    optional int64 server_time = 4;
    repeated PlayerPower player_powers = 6;
}

message FortAttackEvent {
	enum DEF {
		ID = 10007;
	}
	required int32 game_id = 1;
	required Force force = 2;
	required int32 island_id = 3;
	required int32 dead = 4;
	required int32 gun_life = 5;
	optional int64 server_time = 6;
	repeated PlayerPower player_powers = 7;
}


message FightInAirEvent {
    enum DEF {
        ID = 10008;
    }
    required int32 game_id = 1;
    required Force force = 2;
    required Force other_force = 3;
    optional int64 server_time = 4;
    repeated PlayerPower player_powers = 5;
}

message FightInIslandEvent {
    enum DEF {
        ID = 10009;
    }
    required int32 game_id = 1;
    required Force force = 2;
    required Force island_force = 3;
    optional int64 server_time = 4;
    repeated PlayerPower player_powers = 5;
}

message GameOverEvent {
    enum DEF {
        ID = 10100;
    }
    required int32 game_id = 1;
    required int32 winner = 2;
    optional string name = 3;
    optional int64 server_time = 4;
}

